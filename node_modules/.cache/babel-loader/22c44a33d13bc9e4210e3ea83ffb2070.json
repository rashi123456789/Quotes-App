{"ast":null,"code":"var _jsxFileName = \"/home/rashi/Documents/sem 8/mj class videos/mern-stack-code/8.React-Level-2/2,3.Crud-in-React,Edit-Functionality/my-app/src/QuotesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport QuotesList from './QuotesList';\nimport AddQuote from './AddQuote';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuotesContainer = props => {\n  _s();\n\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    //console.log(localStorage.getItem('quotes'))\n    const result = JSON.parse(localStorage.getItem('quotes')) || [];\n    setQuotes(result);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('quotes', JSON.stringify(quotes));\n  }, [quotes]);\n\n  const addItem = formData => {\n    const result = [formData, ...quotes]; //adding formData in quotes\n\n    setQuotes(result);\n  };\n\n  const removeItem = id => {\n    const result = quotes.filter(quote => {\n      return quote.id !== id;\n    });\n    setQuotes(result);\n    console.log('container', id);\n  };\n\n  const editItem = quote => {\n    const result = quotes.map(q => {\n      if (q.id === quote.id) {\n        return { ...q,\n          ...quote\n        };\n      } else {\n        return { ...q\n        };\n      }\n    });\n    setQuotes(result);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(AddQuote, {\n        addItem: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(QuotesList, {\n          quotes: quotes,\n          removeItem: removeItem,\n          editItem: editItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col\",\n        children: \"2 of 2\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuotesContainer, \"bFiJZrFkROGdtOaAUdndGqkhVUE=\");\n\n_c = QuotesContainer;\nexport default QuotesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesContainer\");","map":{"version":3,"sources":["/home/rashi/Documents/sem 8/mj class videos/mern-stack-code/8.React-Level-2/2,3.Crud-in-React,Edit-Functionality/my-app/src/QuotesContainer.js"],"names":["React","useEffect","useState","QuotesList","AddQuote","QuotesContainer","props","quotes","setQuotes","result","JSON","parse","localStorage","getItem","setItem","stringify","addItem","formData","removeItem","id","filter","quote","console","log","editItem","map","q"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAAA;;AAC9B,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMQ,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,EAA7D;AACAL,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GAJQ,EAIP,EAJO,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeR,MAAf,CAA9B;AACH,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT;;AAIA,QAAMS,OAAO,GAAGC,QAAD,IAAY;AACvB,UAAMR,MAAM,GAAG,CAACQ,QAAD,EAAU,GAAGV,MAAb,CAAf,CADuB,CACa;;AACpCC,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GAHD;;AAKA,QAAMS,UAAU,GAAIC,EAAD,IAAO;AACtB,UAAMV,MAAM,GAAGF,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAS;AAClC,aAAOA,KAAK,CAACF,EAAN,KAAaA,EAApB;AACH,KAFc,CAAf;AAGAX,IAAAA,SAAS,CAACC,MAAD,CAAT;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBJ,EAAxB;AACH,GAND;;AAQA,QAAMK,QAAQ,GAAIH,KAAD,IAAU;AACvB,UAAMZ,MAAM,GAAGF,MAAM,CAACkB,GAAP,CAAYC,CAAD,IAAK;AAC3B,UAAGA,CAAC,CAACP,EAAF,KAASE,KAAK,CAACF,EAAlB,EAAsB;AAClB,eAAO,EAAC,GAAGO,CAAJ;AAAM,aAAGL;AAAT,SAAP;AACH,OAFD,MAEK;AACD,eAAO,EAAC,GAAGK;AAAJ,SAAP;AACH;AACJ,KANc,CAAf;AAOAlB,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GATD;;AAWA,sBACI;AAAA,4BACI;AAAA,6BACI,QAAC,QAAD;AAAU,QAAA,OAAO,EAAEO;AAAnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,KAAK,EAAC,KAAX;AAAA,8BACA;AAAA,+BACI,QAAC,UAAD;AACA,UAAA,MAAM,EAAET,MADR;AAEA,UAAA,UAAU,EAAEW,UAFZ;AAGA,UAAA,QAAQ,EAAIM;AAHZ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADA,eAQR;AAAK,QAAA,KAAK,EAAC,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARQ;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAmBH,CAxDD;;GAAMnB,e;;KAAAA,e;AAyDN,eAAeA,eAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport QuotesList from  './QuotesList'\nimport AddQuote from './AddQuote'\n\nconst QuotesContainer = (props) =>{\n    const[quotes,setQuotes]=useState([])\n\n    useEffect(()=>{\n        //console.log(localStorage.getItem('quotes'))\n        const result = JSON.parse(localStorage.getItem('quotes')) || []\n        setQuotes(result)\n    },[])\n\n    useEffect(()=>{\n        localStorage.setItem('quotes',JSON.stringify(quotes))\n    },[quotes])\n\n    const addItem =(formData)=>{\n        const result = [formData,...quotes] //adding formData in quotes\n        setQuotes(result)\n    }\n\n    const removeItem = (id) =>{\n        const result = quotes.filter((quote)=>{\n            return quote.id !== id\n        })\n        setQuotes(result)\n        console.log('container',id)\n    }\n\n    const editItem = (quote) =>{\n        const result = quotes.map((q)=>{\n            if(q.id === quote.id) {\n                return {...q,...quote}\n            }else{\n                return {...q}\n            }\n        })\n        setQuotes(result)\n    }\n    \n    return (\n        <div>\n            <div>\n                <AddQuote addItem={addItem}/>\n            </div>\n            <div class=\"row\">\n            <div>\n                <QuotesList \n                quotes={quotes} \n                removeItem={removeItem}\n                editItem = {editItem}\n                />\n            </div>\n    <div class=\"col\">\n      2 of 2\n    </div>\n  </div>\n        </div>\n    )\n}\nexport default QuotesContainer"]},"metadata":{},"sourceType":"module"}