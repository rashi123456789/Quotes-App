{"ast":null,"code":"var _jsxFileName = \"/home/rashi/Documents/sem 8/mj class videos/mern-stack-code/8.React-Level-2/2.Crud-in-React/my-app/src/QuotesContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport QuotesList from './QuotesList';\nimport QuotesForm from './QuotesForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst QuotesContainer = props => {\n  _s();\n\n  const [quotes, setQuotes] = useState([]);\n  useEffect(() => {\n    //console.log(localStorage.getItem('quotes'))\n    const result = JSON.parse(localStorage.getItem('quotes')) || [];\n    setQuotes(result);\n  }, []);\n  useEffect(() => {\n    localStorage.setItem('quotes', JSON.stringify(quotes));\n  }, [quotes]);\n\n  const addItem = formData => {\n    const result = [formData, ...quotes];\n    setQuotes(result);\n  };\n\n  const removeItem = id => {\n    const result = quotes.filter(quote => {\n      return quote.id !== id;\n    });\n    setQuotes(result);\n    console.log('container', id);\n  };\n\n  const editItem = id => {\n    const inputQuote = prompt(\"Enter new quote\");\n    const result = quotes.map(ele => {\n      if (ele.id === id) {\n        return { ...{\n            inputQuote\n          }\n        };\n      } else {\n        return { ...ele\n        };\n      }\n    });\n    setQuotes(result);\n    console.log(\"edit\", id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"QuotesContainer\", /*#__PURE__*/_jsxDEV(QuotesList, {\n      quotes: quotes,\n      removeItem: removeItem,\n      editItem: editItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(QuotesForm, {\n      addItem: addItem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n};\n\n_s(QuotesContainer, \"bFiJZrFkROGdtOaAUdndGqkhVUE=\");\n\n_c = QuotesContainer;\nexport default QuotesContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"QuotesContainer\");","map":{"version":3,"sources":["/home/rashi/Documents/sem 8/mj class videos/mern-stack-code/8.React-Level-2/2.Crud-in-React/my-app/src/QuotesContainer.js"],"names":["React","useEffect","useState","QuotesList","QuotesForm","QuotesContainer","props","quotes","setQuotes","result","JSON","parse","localStorage","getItem","setItem","stringify","addItem","formData","removeItem","id","filter","quote","console","log","editItem","inputQuote","prompt","map","ele"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,UAAP,MAAwB,cAAxB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAU;AAAA;;AAC9B,QAAK,CAACC,MAAD,EAAQC,SAAR,IAAmBN,QAAQ,CAAC,EAAD,CAAhC;AAEAD,EAAAA,SAAS,CAAC,MAAI;AACV;AACA,UAAMQ,MAAM,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,QAArB,CAAX,KAA8C,EAA7D;AACAL,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GAJQ,EAIP,EAJO,CAAT;AAMAR,EAAAA,SAAS,CAAC,MAAI;AACVW,IAAAA,YAAY,CAACE,OAAb,CAAqB,QAArB,EAA8BJ,IAAI,CAACK,SAAL,CAAeR,MAAf,CAA9B;AACH,GAFQ,EAEP,CAACA,MAAD,CAFO,CAAT;;AAIA,QAAMS,OAAO,GAAGC,QAAD,IAAY;AACvB,UAAMR,MAAM,GAAG,CAACQ,QAAD,EAAU,GAAGV,MAAb,CAAf;AACAC,IAAAA,SAAS,CAACC,MAAD,CAAT;AACH,GAHD;;AAKA,QAAMS,UAAU,GAAIC,EAAD,IAAO;AACtB,UAAMV,MAAM,GAAGF,MAAM,CAACa,MAAP,CAAeC,KAAD,IAAS;AAClC,aAAOA,KAAK,CAACF,EAAN,KAAaA,EAApB;AACH,KAFc,CAAf;AAGAX,IAAAA,SAAS,CAACC,MAAD,CAAT;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBJ,EAAxB;AACH,GAND;;AAQA,QAAMK,QAAQ,GAAIL,EAAD,IAAO;AACpB,UAAMM,UAAU,GAAGC,MAAM,CAAE,iBAAF,CAAzB;AACA,UAAMjB,MAAM,GAAGF,MAAM,CAACoB,GAAP,CAAYC,GAAD,IAAO;AAC7B,UAAGA,GAAG,CAACT,EAAJ,KAASA,EAAZ,EAAe;AACX,eAAO,EAAC,GAAG;AAACM,YAAAA;AAAD;AAAJ,SAAP;AACH,OAFD,MAGI;AACA,eAAO,EAAC,GAAGG;AAAJ,SAAP;AACH;AACJ,KAPc,CAAf;AAQApB,IAAAA,SAAS,CAACC,MAAD,CAAT;AACAa,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAmBJ,EAAnB;AACH,GAZD;;AAcA,sBACI;AAAA,+CAEI,QAAC,UAAD;AAAY,MAAA,MAAM,EAAEZ,MAApB;AAA4B,MAAA,UAAU,EAAEW,UAAxC;AAAoD,MAAA,QAAQ,EAAEM;AAA9D;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAER;AAArB;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH,CA/CD;;GAAMX,e;;KAAAA,e;AAgDN,eAAeA,eAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport QuotesList from  './QuotesList'\nimport QuotesForm from './QuotesForm'\n\nconst QuotesContainer = (props) =>{\n    const[quotes,setQuotes]=useState([])\n\n    useEffect(()=>{\n        //console.log(localStorage.getItem('quotes'))\n        const result = JSON.parse(localStorage.getItem('quotes')) || []\n        setQuotes(result)\n    },[])\n\n    useEffect(()=>{\n        localStorage.setItem('quotes',JSON.stringify(quotes))\n    },[quotes])\n\n    const addItem =(formData)=>{\n        const result = [formData,...quotes]\n        setQuotes(result)\n    }\n\n    const removeItem = (id) =>{\n        const result = quotes.filter((quote)=>{\n            return quote.id !== id\n        })\n        setQuotes(result)\n        console.log('container',id)\n    }\n\n    const editItem = (id) =>{\n        const inputQuote = prompt (\"Enter new quote\")\n        const result = quotes.map((ele)=>{\n            if(ele.id===id){\n                return {...{inputQuote}}\n            }\n            else{\n                return {...ele}\n            }\n        })\n        setQuotes(result)\n        console.log(\"edit\",id)\n    }\n\n    return (\n        <div>\n            QuotesContainer\n            <QuotesList quotes={quotes} removeItem={removeItem} editItem={editItem}/>\n            <QuotesForm addItem={addItem}/>\n        </div>\n    )\n}\nexport default QuotesContainer"]},"metadata":{},"sourceType":"module"}